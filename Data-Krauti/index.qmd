

# Welcome to Data-Krauti <img src=".\pics\cabbage.png" alt="cabbage" style="height:30px;vertical-align:-5%" />

**Data-Krauti** is a free tool for exploring tabular data. It is based on **HTML5** and operates directly in your browser without any additional installation. It can load both local and remote files in the formats **CSV, JSON, GeoJSON**, and **TopoJSON**. You can **analyze** and filter **the** data using several tools. If the data contains **geographic information**, a **map** can be activated to explore the data in its geographic context and relevance.

![](.\pics\Screenshot_1.png)

# What Can I Do with Data-Krauti?

At the end of the tutorial, participants will be able to:

- Identify the main features that make Julia an attractive language for Data Science.
- Set up a Julia environment to run their data analysis.
- Efficiently handle datasets (even across different languages) through Tables.jl and Arrow.jl.
- Fit (generalized) linear mixed models with MixedModels.jl.
- Communicate across languages (Julia, R, Python).

**Intended Audience and Level:**
The tutorial is intended for any data scientist with experience in R and/or Python who is interested in learning about the attractive features of Julia for Data Science. No prior knowledge of Julia is required.

# What Is It Not?

This tutorial does not cover:

- The main features that make Julia an attractive language for Data Science.
- Setting up a Julia environment to run data analysis.
- Efficiently handling datasets (even across different languages) through Tables.jl and Arrow.jl.
- Fitting (generalized) linear mixed models with MixedModels.jl.
- Communicating across languages (Julia, R, Python).

**Intended Audience and Level:**
The tutorial is intended for any data scientist with experience in R and/or Python who is interested in learning about the attractive features of Julia for Data Science. No prior knowledge of Julia is required.

# Credits

Participants are required to follow these steps before the day of the workshop:

1. Clone the workshop repository: `git clone https://github.com/crsl4/julia-workshop.git`.

2. Install Julia. The recommended option is to use [JuliaUp](https://github.com/JuliaLang/juliaup):

   - Windows: `winget install julia -s msstore`.
   - Mac and Linux: `curl -fsSL https://install.julialang.org | sh`.
   - Homebrew users: `brew install juliaup`.

After JuliaUp is installed, you can install different Julia versions with:

```shell
juliaup add release  ## installs release version
juliaup add rc       ## installs release candidate version
juliaup st           ## status of julia versions installed
juliaup default rc   ## make release candidate version the default
```

 3. Choose a dataset along with a script to analyze it written in another language (R or python) as we will spend part of the workshop translating participants' scripts to Julia.
